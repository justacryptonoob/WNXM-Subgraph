// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Approval extends ethereum.Event {
  get params(): Approval__Params {
    return new Approval__Params(this);
  }
}

export class Approval__Params {
  _event: Approval;

  constructor(event: Approval) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get spender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class SupportContractAdded extends ethereum.Event {
  get params(): SupportContractAdded__Params {
    return new SupportContractAdded__Params(this);
  }
}

export class SupportContractAdded__Params {
  _event: SupportContractAdded;

  constructor(event: SupportContractAdded) {
    this._event = event;
  }

  get supportContract(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class GAME extends ethereum.SmartContract {
  static bind(address: Address): GAME {
    return new GAME("GAME", address);
  }

  allowance(owner: Address, spender: Address): BigInt {
    let result = super.call(
      "allowance",
      "allowance(address,address):(uint256)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(spender)]
    );

    return result[0].toBigInt();
  }

  try_allowance(owner: Address, spender: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "allowance",
      "allowance(address,address):(uint256)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(spender)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  approve(spender: Address, amount: BigInt): boolean {
    let result = super.call("approve", "approve(address,uint256):(bool)", [
      ethereum.Value.fromAddress(spender),
      ethereum.Value.fromUnsignedBigInt(amount)
    ]);

    return result[0].toBoolean();
  }

  try_approve(spender: Address, amount: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("approve", "approve(address,uint256):(bool)", [
      ethereum.Value.fromAddress(spender),
      ethereum.Value.fromUnsignedBigInt(amount)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  balanceOf(account: Address): BigInt {
    let result = super.call("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(account: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  decimals(): i32 {
    let result = super.call("decimals", "decimals():(uint8)", []);

    return result[0].toI32();
  }

  try_decimals(): ethereum.CallResult<i32> {
    let result = super.tryCall("decimals", "decimals():(uint8)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  decreaseAllowance(spender: Address, subtractedValue: BigInt): boolean {
    let result = super.call(
      "decreaseAllowance",
      "decreaseAllowance(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(spender),
        ethereum.Value.fromUnsignedBigInt(subtractedValue)
      ]
    );

    return result[0].toBoolean();
  }

  try_decreaseAllowance(
    spender: Address,
    subtractedValue: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "decreaseAllowance",
      "decreaseAllowance(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(spender),
        ethereum.Value.fromUnsignedBigInt(subtractedValue)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  increaseAllowance(spender: Address, addedValue: BigInt): boolean {
    let result = super.call(
      "increaseAllowance",
      "increaseAllowance(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(spender),
        ethereum.Value.fromUnsignedBigInt(addedValue)
      ]
    );

    return result[0].toBoolean();
  }

  try_increaseAllowance(
    spender: Address,
    addedValue: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "increaseAllowance",
      "increaseAllowance(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(spender),
        ethereum.Value.fromUnsignedBigInt(addedValue)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isOfficialAccount(_account: Address): boolean {
    let result = super.call(
      "isOfficialAccount",
      "isOfficialAccount(address):(bool)",
      [ethereum.Value.fromAddress(_account)]
    );

    return result[0].toBoolean();
  }

  try_isOfficialAccount(_account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isOfficialAccount",
      "isOfficialAccount(address):(bool)",
      [ethereum.Value.fromAddress(_account)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  recoveryAddress(): Address {
    let result = super.call(
      "recoveryAddress",
      "recoveryAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_recoveryAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "recoveryAddress",
      "recoveryAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  totalSupply(): BigInt {
    let result = super.call("totalSupply", "totalSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalSupply", "totalSupply():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  transfer(recipient: Address, amount: BigInt): boolean {
    let result = super.call("transfer", "transfer(address,uint256):(bool)", [
      ethereum.Value.fromAddress(recipient),
      ethereum.Value.fromUnsignedBigInt(amount)
    ]);

    return result[0].toBoolean();
  }

  try_transfer(
    recipient: Address,
    amount: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall("transfer", "transfer(address,uint256):(bool)", [
      ethereum.Value.fromAddress(recipient),
      ethereum.Value.fromUnsignedBigInt(amount)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  transferAnyERC20Token(tokenAddress: Address, tokens: BigInt): boolean {
    let result = super.call(
      "transferAnyERC20Token",
      "transferAnyERC20Token(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(tokenAddress),
        ethereum.Value.fromUnsignedBigInt(tokens)
      ]
    );

    return result[0].toBoolean();
  }

  try_transferAnyERC20Token(
    tokenAddress: Address,
    tokens: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "transferAnyERC20Token",
      "transferAnyERC20Token(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(tokenAddress),
        ethereum.Value.fromUnsignedBigInt(tokens)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  transferFrom(sender: Address, recipient: Address, amount: BigInt): boolean {
    let result = super.call(
      "transferFrom",
      "transferFrom(address,address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(sender),
        ethereum.Value.fromAddress(recipient),
        ethereum.Value.fromUnsignedBigInt(amount)
      ]
    );

    return result[0].toBoolean();
  }

  try_transferFrom(
    sender: Address,
    recipient: Address,
    amount: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "transferFrom",
      "transferFrom(address,address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(sender),
        ethereum.Value.fromAddress(recipient),
        ethereum.Value.fromUnsignedBigInt(amount)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  url(): string {
    let result = super.call("url", "url():(string)", []);

    return result[0].toString();
  }

  try_url(): ethereum.CallResult<string> {
    let result = super.tryCall("url", "url():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DefaultCall extends ethereum.Call {
  get inputs(): DefaultCall__Inputs {
    return new DefaultCall__Inputs(this);
  }

  get outputs(): DefaultCall__Outputs {
    return new DefaultCall__Outputs(this);
  }
}

export class DefaultCall__Inputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DefaultCall__Outputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class AirDropAndSupportCall extends ethereum.Call {
  get inputs(): AirDropAndSupportCall__Inputs {
    return new AirDropAndSupportCall__Inputs(this);
  }

  get outputs(): AirDropAndSupportCall__Outputs {
    return new AirDropAndSupportCall__Outputs(this);
  }
}

export class AirDropAndSupportCall__Inputs {
  _call: AirDropAndSupportCall;

  constructor(call: AirDropAndSupportCall) {
    this._call = call;
  }

  get _rewardsContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _recipients(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get _games(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get _amounts(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }
}

export class AirDropAndSupportCall__Outputs {
  _call: AirDropAndSupportCall;

  constructor(call: AirDropAndSupportCall) {
    this._call = call;
  }
}

export class ApproveCall extends ethereum.Call {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get spender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class DecreaseAllowanceCall extends ethereum.Call {
  get inputs(): DecreaseAllowanceCall__Inputs {
    return new DecreaseAllowanceCall__Inputs(this);
  }

  get outputs(): DecreaseAllowanceCall__Outputs {
    return new DecreaseAllowanceCall__Outputs(this);
  }
}

export class DecreaseAllowanceCall__Inputs {
  _call: DecreaseAllowanceCall;

  constructor(call: DecreaseAllowanceCall) {
    this._call = call;
  }

  get spender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get subtractedValue(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DecreaseAllowanceCall__Outputs {
  _call: DecreaseAllowanceCall;

  constructor(call: DecreaseAllowanceCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class DecreaseSupportCall extends ethereum.Call {
  get inputs(): DecreaseSupportCall__Inputs {
    return new DecreaseSupportCall__Inputs(this);
  }

  get outputs(): DecreaseSupportCall__Outputs {
    return new DecreaseSupportCall__Outputs(this);
  }
}

export class DecreaseSupportCall__Inputs {
  _call: DecreaseSupportCall;

  constructor(call: DecreaseSupportCall) {
    this._call = call;
  }

  get _rewardsContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _game(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _decrease(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class DecreaseSupportCall__Outputs {
  _call: DecreaseSupportCall;

  constructor(call: DecreaseSupportCall) {
    this._call = call;
  }
}

export class EnterContestCall extends ethereum.Call {
  get inputs(): EnterContestCall__Inputs {
    return new EnterContestCall__Inputs(this);
  }

  get outputs(): EnterContestCall__Outputs {
    return new EnterContestCall__Outputs(this);
  }
}

export class EnterContestCall__Inputs {
  _call: EnterContestCall;

  constructor(call: EnterContestCall) {
    this._call = call;
  }

  get _supportContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _game(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _contestId(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _payment(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _data(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }
}

export class EnterContestCall__Outputs {
  _call: EnterContestCall;

  constructor(call: EnterContestCall) {
    this._call = call;
  }
}

export class FundRewardsContractCall extends ethereum.Call {
  get inputs(): FundRewardsContractCall__Inputs {
    return new FundRewardsContractCall__Inputs(this);
  }

  get outputs(): FundRewardsContractCall__Outputs {
    return new FundRewardsContractCall__Outputs(this);
  }
}

export class FundRewardsContractCall__Inputs {
  _call: FundRewardsContractCall;

  constructor(call: FundRewardsContractCall) {
    this._call = call;
  }

  get _rewardsContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _startWeek(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _numberOfWeeks(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class FundRewardsContractCall__Outputs {
  _call: FundRewardsContractCall;

  constructor(call: FundRewardsContractCall) {
    this._call = call;
  }
}

export class IncreaseAllowanceCall extends ethereum.Call {
  get inputs(): IncreaseAllowanceCall__Inputs {
    return new IncreaseAllowanceCall__Inputs(this);
  }

  get outputs(): IncreaseAllowanceCall__Outputs {
    return new IncreaseAllowanceCall__Outputs(this);
  }
}

export class IncreaseAllowanceCall__Inputs {
  _call: IncreaseAllowanceCall;

  constructor(call: IncreaseAllowanceCall) {
    this._call = call;
  }

  get spender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get addedValue(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class IncreaseAllowanceCall__Outputs {
  _call: IncreaseAllowanceCall;

  constructor(call: IncreaseAllowanceCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class IncreaseSupportCall extends ethereum.Call {
  get inputs(): IncreaseSupportCall__Inputs {
    return new IncreaseSupportCall__Inputs(this);
  }

  get outputs(): IncreaseSupportCall__Outputs {
    return new IncreaseSupportCall__Outputs(this);
  }
}

export class IncreaseSupportCall__Inputs {
  _call: IncreaseSupportCall;

  constructor(call: IncreaseSupportCall) {
    this._call = call;
  }

  get _rewardsContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _game(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _increase(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class IncreaseSupportCall__Outputs {
  _call: IncreaseSupportCall;

  constructor(call: IncreaseSupportCall) {
    this._call = call;
  }
}

export class PayGameCreditsCall extends ethereum.Call {
  get inputs(): PayGameCreditsCall__Inputs {
    return new PayGameCreditsCall__Inputs(this);
  }

  get outputs(): PayGameCreditsCall__Outputs {
    return new PayGameCreditsCall__Outputs(this);
  }
}

export class PayGameCreditsCall__Inputs {
  _call: PayGameCreditsCall;

  constructor(call: PayGameCreditsCall) {
    this._call = call;
  }

  get _supportContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _game(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _payment(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _data(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class PayGameCreditsCall__Outputs {
  _call: PayGameCreditsCall;

  constructor(call: PayGameCreditsCall) {
    this._call = call;
  }
}

export class PayLoyaltyPointsCall extends ethereum.Call {
  get inputs(): PayLoyaltyPointsCall__Inputs {
    return new PayLoyaltyPointsCall__Inputs(this);
  }

  get outputs(): PayLoyaltyPointsCall__Outputs {
    return new PayLoyaltyPointsCall__Outputs(this);
  }
}

export class PayLoyaltyPointsCall__Inputs {
  _call: PayLoyaltyPointsCall;

  constructor(call: PayLoyaltyPointsCall) {
    this._call = call;
  }

  get _supportContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _game(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _loyaltyPayment(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _data(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class PayLoyaltyPointsCall__Outputs {
  _call: PayLoyaltyPointsCall;

  constructor(call: PayLoyaltyPointsCall) {
    this._call = call;
  }
}

export class SetOwnerCall extends ethereum.Call {
  get inputs(): SetOwnerCall__Inputs {
    return new SetOwnerCall__Inputs(this);
  }

  get outputs(): SetOwnerCall__Outputs {
    return new SetOwnerCall__Outputs(this);
  }
}

export class SetOwnerCall__Inputs {
  _call: SetOwnerCall;

  constructor(call: SetOwnerCall) {
    this._call = call;
  }

  get _newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetOwnerCall__Outputs {
  _call: SetOwnerCall;

  constructor(call: SetOwnerCall) {
    this._call = call;
  }
}

export class SetRecoveryCall extends ethereum.Call {
  get inputs(): SetRecoveryCall__Inputs {
    return new SetRecoveryCall__Inputs(this);
  }

  get outputs(): SetRecoveryCall__Outputs {
    return new SetRecoveryCall__Outputs(this);
  }
}

export class SetRecoveryCall__Inputs {
  _call: SetRecoveryCall;

  constructor(call: SetRecoveryCall) {
    this._call = call;
  }

  get _newRecovery(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetRecoveryCall__Outputs {
  _call: SetRecoveryCall;

  constructor(call: SetRecoveryCall) {
    this._call = call;
  }
}

export class SetSupportCall extends ethereum.Call {
  get inputs(): SetSupportCall__Inputs {
    return new SetSupportCall__Inputs(this);
  }

  get outputs(): SetSupportCall__Outputs {
    return new SetSupportCall__Outputs(this);
  }
}

export class SetSupportCall__Inputs {
  _call: SetSupportCall;

  constructor(call: SetSupportCall) {
    this._call = call;
  }

  get _rewardsContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _game(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SetSupportCall__Outputs {
  _call: SetSupportCall;

  constructor(call: SetSupportCall) {
    this._call = call;
  }
}

export class SetSupportContractCall extends ethereum.Call {
  get inputs(): SetSupportContractCall__Inputs {
    return new SetSupportContractCall__Inputs(this);
  }

  get outputs(): SetSupportContractCall__Outputs {
    return new SetSupportContractCall__Outputs(this);
  }
}

export class SetSupportContractCall__Inputs {
  _call: SetSupportContractCall;

  constructor(call: SetSupportContractCall) {
    this._call = call;
  }

  get _supportContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetSupportContractCall__Outputs {
  _call: SetSupportContractCall;

  constructor(call: SetSupportContractCall) {
    this._call = call;
  }
}

export class TransferCall extends ethereum.Call {
  get inputs(): TransferCall__Inputs {
    return new TransferCall__Inputs(this);
  }

  get outputs(): TransferCall__Outputs {
    return new TransferCall__Outputs(this);
  }
}

export class TransferCall__Inputs {
  _call: TransferCall;

  constructor(call: TransferCall) {
    this._call = call;
  }

  get recipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class TransferCall__Outputs {
  _call: TransferCall;

  constructor(call: TransferCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class TransferAnyERC20TokenCall extends ethereum.Call {
  get inputs(): TransferAnyERC20TokenCall__Inputs {
    return new TransferAnyERC20TokenCall__Inputs(this);
  }

  get outputs(): TransferAnyERC20TokenCall__Outputs {
    return new TransferAnyERC20TokenCall__Outputs(this);
  }
}

export class TransferAnyERC20TokenCall__Inputs {
  _call: TransferAnyERC20TokenCall;

  constructor(call: TransferAnyERC20TokenCall) {
    this._call = call;
  }

  get tokenAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokens(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class TransferAnyERC20TokenCall__Outputs {
  _call: TransferAnyERC20TokenCall;

  constructor(call: TransferAnyERC20TokenCall) {
    this._call = call;
  }

  get success(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class TransferFromCall extends ethereum.Call {
  get inputs(): TransferFromCall__Inputs {
    return new TransferFromCall__Inputs(this);
  }

  get outputs(): TransferFromCall__Outputs {
    return new TransferFromCall__Outputs(this);
  }
}

export class TransferFromCall__Inputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get sender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get recipient(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferFromCall__Outputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}
